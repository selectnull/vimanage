#!/bin/bash

packages_root=~/.vim/pack

# make VIMANAGE_ROOT environment variable as default for packages_root
[ ! -z "${VIMANAGE_ROOT}" ] && packages_root=$(realpath ${VIMANAGE_ROOT})

usage() {
    echo "vimanage manages vim/nvim packages"
    echo "version 1.0"
    echo
    if [ "$1" == "full" ]; then
        echo "    add <plugin-git-url>    Add a plugin"
        echo "    remove <plugin>         Remove a plugin"
        echo "    list                    List installed plugin"
        echo "    update                  Update all plugins"
        echo "    help                    Show this help"
        echo
    fi
}

default_packlib_dir() {
    for packlib in $packages_root/*; do
        [ -d "$packlib" ] && {
            echo "$packlib"
            break
        }
    done
}

foreach_plugin() {
    # iterate thru plugins
    for packlib in $packages_root/*; do
        for startopt in $packlib/*; do
            for plugin in $startopt/*; do
                if [ -d "$plugin/.git" ]; then
                    # we check for .git existence on purpose, if we did not git would
                    # fall upwards thru directory tree and report .vimfiles repository
                    echo "$plugin"
                fi
            done
        done
    done
}

colorize_plugin() {
    # output colors
    name_color=$(tput setaf 3)
    url_color=$(tput setaf 4)
    reset_color=$(tput sgr0)

    echo -e "${name_color}$(plugin_name $plugin) ${url_color}$(plugin_url $plugin) ${reset_color}"
}

plugin_name() {
    basename "$1"
}

plugin_url() {
    git --git-dir "$1/.git" remote -v | grep fetch | cut -f 2 | cut -d ' ' -f 1
}

add_plugin() (
    cd "$(default_packlib_dir)/start"
    git clone -- "$1"
)

install_from_file() {
    while read plugin; do
        add_plugin "$plugin"
    done < "$1"
}

update_plugin() {
    git --git-dir "$1/.git" --work-tree "$1" pull
}

update_all_plugins() {
    for plugin in $(foreach_plugin); do
        echo -e "$(colorize_plugin $plugin)"
        update_plugin "$plugin"
    done
}

list_plugins() {
    # for plugin in $(foreach_plugin); do
    #     echo $plugin
    # done
    # exit 1
    output=""
    for plugin in $(foreach_plugin); do
        if [ -t 1 ]; then
            # set colors only when output is stdout, these will not be set
            # if output is redirected to file
            output="$output\n$(colorize_plugin $plugin)"
        else
            output="$output\n$(plugin_url $plugin)"
        fi
    done
    echo -e "$output" | column -t
}

remove_plugin() {
    plugin="$1"
    tmp_dir=$(mktemp -d)
    for p in $(foreach_plugin); do
        if [ $(plugin_name "$p") = "$plugin" ]; then
            echo "Deleting plugin $plugin"
            mv "$p" "$tmp_dir"
        fi
    done
    rm -rf "$tmp_dir"
}


# process command line switches
subcommand=$1
case "$subcommand" in
    add|install|i)
        shift
        if [ -f "$1" ]; then
            install_from_file "$1"
        else
            add_plugin "$1"
        fi
        ;;
    list|l)
        shift
        list_plugins
        ;;
    remove|uninstall|d)
        shift
        remove_plugin "$1"
        ;;
    update|u)
        shift
        update_all_plugins
        ;;
    help|h)
        shift
        usage full
        ;;
    libs)
        shift
        default_packlib_dir
        ;;
    *)
        echo "Invalid command: $1"
        exit 1
        ;;
esac
